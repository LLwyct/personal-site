{"componentChunkName":"component---src-templates-article-detail-js","path":"/articles/手写实现防抖debounce与节流throttle","result":{"data":{"markdownRemark":{"html":"<ul>\n<li><a href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E9%98%B2%E6%8A%96%E4%B8%8E%E8%8A%82%E6%B5%81\">什么是防抖与节流？</a>\n<ul>\n<li><a href=\"#%E9%98%B2%E6%8A%96\">防抖</a></li>\n<li><a href=\"#%E8%8A%82%E6%B5%81\">节流</a></li>\n<li><a href=\"#%E4%BB%A3%E7%A0%81\">代码</a></li>\n</ul>\n</li>\n</ul>\n<p>其实这种文章网上已经烂大街了，但是我还是要自己去手写一遍，一是便于记忆，二是提高自己的理解。</p>\n<p>今年四月份在阿里的实习招聘笔试题中，当时就出现了一道节流的题目，但是当时还没有看到这里，于是便稀里糊涂硬着头地写了，没想到当时自己第一次自主思考的节流的实现，居然和标准答案基本一致，还是挺惊讶的，因为之前从来没看过任何相关资料。</p>\n<h1>什么是防抖与节流？</h1>\n<h2>防抖</h2>\n<p>先说说防抖。</p>\n<p>抖动，可以理解为一次事件的触发。有的事件有高频触发的特点，比如 <code class=\"language-text\">mousemove</code>，<code class=\"language-text\">scroll</code>，<code class=\"language-text\">mousedown</code> 等，尤其是指针移动这个事件，可以一瞬间触发好多次。在有的场景下，每当我们触发一次事件，可能要像服务器发送一些数据，如果如此高频的发送数据，服务器是吃不消的，因此要借助防抖来控制。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210606203526332.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3N3YWxsb3dibGFuaw==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p>防抖就是防止事件/函数频繁地触发，如果事件被频繁地触发，那么则不执行任何逻辑，只响应最后一次触发并执行相应的逻辑。如果事件一直被触发就一直等待，直到事件超过timeout时长后依然未被触发，则触发。</p>\n<p>具体演示见此 <a href=\"https://codepen.io/llwyct/pen/xxqjmXx\">CodePen</a>。</p>\n<h2>节流</h2>\n<p>节流和防抖很像，防抖是如果重复的事件不断涌入，就一直不执行逻辑，直到一个timeout之后还没有事件触发；而节流是指，在一段timeout时间内之触发一次，直到下一次timeout时间到达，则重新计算。</p>\n<p>具体演示见此 <a href=\"https://codepen.io/llwyct/pen/xxqjmXx\">CodePen</a>。</p>\n<h2>代码</h2>\n<p>具体演示见此 <a href=\"https://codepen.io/llwyct/pen/xxqjmXx\">CodePen</a>。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> box <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'box'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    box<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>offsetX<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>e<span class=\"token punctuation\">.</span>offsetY<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">debounce</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">func<span class=\"token punctuation\">,</span> delay</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> timer<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">func</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">throttle</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">func<span class=\"token punctuation\">,</span> delay</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> lock <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lock<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        lock <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">func</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            lock <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nbox<span class=\"token punctuation\">.</span>onmousemove <span class=\"token operator\">=</span> <span class=\"token function\">throttle</span><span class=\"token punctuation\">(</span>move<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbox<span class=\"token punctuation\">.</span>onmousemove <span class=\"token operator\">=</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span>move<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"手写实现防抖debounce与节流throttle","label":"JavaScript&手写实现","date":"2021-06-13 17:57:00","autonav":1},"timeToRead":2}},"pageContext":{"title":"手写实现防抖debounce与节流throttle"}},"staticQueryHashes":[]}